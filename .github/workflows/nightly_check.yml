name: Cypress nightly tests (Preview Deployment)

on:
    schedule:
        # runs tests every day at 4am
        -   cron: '0 4 * * *'


jobs:
    deploy-preview:
        name: Deploy Preview
        runs-on: ubuntu-latest
        if: ${{ inputs.run_deploy }}
        env:
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
            VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        steps:
            -   uses: actions/checkout@v4
            -   name: Install Vercel CLI
                run: npm install --global vercel@latest
            -   name: Pull Vercel Environment Information
                run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
            -   name: Write .env
                run: |
                    echo "${{ secrets.ENV_PREVIEW }}" > .env
            -   name: Build Project Artifacts
                run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
            -   name: Deploy Project Artifacts to Vercel
                run: |
                    url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
                    vercel alias --token=${{ secrets.VERCEL_TOKEN }} set "$url" ubco-capstone-team-3.vercel.app

    setup-db:
        name: Set up database
        runs-on: ubuntu-latest
        if: ${{ inputs.run_deploy }}
        needs: [ 'deploy-preview' ]
        continue-on-error: true
        steps:
            -   uses: actions/checkout@v4
            -   name: Write environment variables
                run: |
                    echo "${{ secrets.ENV_PREVIEW }}" > .env
            -   name: Migrate Database
                run: npx prisma migrate dev &> prisma_migrate.log

    cypress-e2e:
        name: Run cypress E2E tests on preview deployment
        runs-on: ubuntu-latest
        if: always()
        needs: [ deploy-preview, setup-db ]
        outputs:
            PR_ID: ${{ steps.save-cypress-outputs.outputs.PR_ID }}
        steps:
            -   uses: actions/checkout@v4
            -   name: Write environment variables
                run: |
                    echo "${{ secrets.ENV_PREVIEW }}" > .env
            -   name: Cypress Run E2E Tests
                uses: cypress-io/github-action@v6
                continue-on-error: true
                env:
                    GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_ACCESS_TOKEN }}
                with:
                    wait-on: ${{ secrets.CYPRESS_BASE_URL }}
                    browser: chrome
                    config: baseUrl=${{ secrets.CYPRESS_BASE_URL }}
            -   name: Save cypress outputs
                id: save-cypress-outputs
                run: |
                    echo "PR_ID=$CYPRESS_PULL_REQUEST_ID" >> $GITHUB_OUTPUT
            -   name: Upload test results
                uses: actions/upload-artifact@v3
                with:
                    name: test-results
                    path: cypress/reports/e2e/e2e*.json
